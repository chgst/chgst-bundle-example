# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    priorities: [ 'text/html', 'application/json' ]
    form.building_enter.type.class: AppBundle\Form\BuildingEnterForm
    form.building_exit.type.class: AppBundle\Form\BuildingExitForm

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    content.negotiator:
        class: Negotiation\Negotiator

    listener.template.resolver:
        class: FlyingColours\CommonBundle\Listener\TemplateResolverListener
        arguments: [ "@sensio_framework_extra.view.guesser" ]
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }

    listener.content.negotiation:
        class: FlyingColours\CommonBundle\Listener\ContentNegotiationListener
        arguments: [ "%priorities%", "@content.negotiator", "@serializer", "@templating" ]
        tags:
            - { name: kernel.event_listener, event: kernel.view, method: onKernelView }

    form.building_enter.type:
        class: "%form.building_enter.type.class%"
        tags:
            - { name: "form.type" }

    form.building_enter:
        class: Symfony\Component\Form\FormInterface
        factory: [ "@form.factory", create ]
        arguments: [ "%form.building_enter.type.class%" ]

    AppBundle\Controller\BuildingEnterController:
        arguments:
            $form: '@form.building_enter'
        tags: ['controller.service_arguments']

    form.building_exit.type:
        class: "%form.building_exit.type.class%"
        tags:
            - { name: "form.type" }

    form.building_exit:
        class: Symfony\Component\Form\FormInterface
        factory: [ "@form.factory", create ]
        arguments: [ "%form.building_exit.type.class%" ]

    AppBundle\Controller\BuildingExitController:
        arguments:
            $form: '@form.building_exit'
        tags: ['controller.service_arguments']

